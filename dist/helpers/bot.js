"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _telegraf=_interopRequireDefault(require("telegraf")),_socksProxyAgent=_interopRequireDefault(require("socks-proxy-agent")),_session=_interopRequireDefault(require("telegraf/session")),_stage=_interopRequireDefault(require("telegraf/stage")),_base=_interopRequireDefault(require("telegraf/scenes/base")),_markup=_interopRequireDefault(require("telegraf/markup")),_extra=_interopRequireDefault(require("telegraf/extra")),_botConfig=_interopRequireDefault(require("../../botConfig.json")),_mongo=_interopRequireDefault(require("./mongo"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const bot=new _telegraf.default(_botConfig.default.botToken,_botConfig.default.useProxy?{telegram:{agent:new _socksProxyAgent.default(`socks://${_botConfig.default.socks5}`)}}:{}),stage=new _stage.default,botDB=(0,_mongo.default)(_botConfig.default.mongoURL,_botConfig.default.dbName);function createMarkupKeyboard(a){const b=a.map(a=>_markup.default.callbackButton(a,"unsub-"+a));return _markup.default.inlineKeyboard(b)}const addChannelScene=new _base.default("addchannel");addChannelScene.enter(a=>a.replyWithMarkdown("_OK, now you have to send URL of RSS-channel that you want to listen!\nIf you don't want to add channel type /cancel_")),addChannelScene.leave(a=>a.reply("\uD83D\uDC4C Done!")),addChannelScene.command("cancel",_stage.default.leave()),addChannelScene.on("text",async a=>{if(a.message.text.match(/https?:\/\/.*\..*/)){let b=await botDB.subUserToFeed(a.message.text,a.message.chat.id);a.replyWithMarkup(b?"_You have successfully subscribed to this channel!_":"_OK, but you had already been subscribed to this RSS-channel earlier_"),_stage.default.leave()(a)}else a.reply("\u274C It wasn't an URL!")}),stage.command("cancel",_stage.default.leave()),stage.register(addChannelScene),bot.use((0,_session.default)()),bot.use(stage.middleware()),bot.start(async a=>{const b=await botDB.getSubsOfUser(a.message.chat.id),c=b.length?b.reduce((a,b)=>a+"\n"+b,"_~ Channels that you listen now: _"):"\u274C You didn't subscribe to any channel yet!";a.replyWithMarkdown("*Welcome!*\n\nThe bot checks out RSS-channels that you subscribed to every 30 minutes and if they have the updates \u2014 sends updates to you! \n\nIf you want to subscribe to new RSS-channel, write /addchannel \nIf you want to unsubscribe from channel that you had already been listening, type /unsub\n\n"+c+"\n\n_Have a good one!_")}),bot.command("addchannel",_stage.default.enter("addchannel")),bot.command("unsub",async a=>{const b=await botDB.getSubsOfUser(a.message.chat.id);b.length?a.replyWithMarkdown("_Tap to the button to unsubscribe._\n~ List of the RSS-channels that you subscribed to:",_extra.default.markup(createMarkupKeyboard(b))):a.reply("\u274C Your subscribtion list is empty!")}),bot.on("callback_query",async a=>{if(a.callbackQuery&&a.callbackQuery.data.startsWith("unsub-")){const b=a.callbackQuery.data.replace("unsub-",""),c=await botDB.unsubUserFromFeed(b,a.callbackQuery.message.chat.id);a.reply(c?"\uD83D\uDC4C Unsubscribed!":"\u274C You've already unsubscribed from that channel!")}}),bot.catch(a=>{console.log("Ooops",a)});var _default=bot;exports.default=_default;